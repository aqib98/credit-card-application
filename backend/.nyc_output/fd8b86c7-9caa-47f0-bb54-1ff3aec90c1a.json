{"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/controllers/cardsController.spec.js":{"path":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/controllers/cardsController.spec.js","statementMap":{"0":{"start":{"line":1,"column":33},"end":{"line":1,"column":456}},"1":{"start":{"line":1,"column":64},"end":{"line":1,"column":89}},"2":{"start":{"line":1,"column":91},"end":{"line":1,"column":453}},"3":{"start":{"line":1,"column":165},"end":{"line":1,"column":263}},"4":{"start":{"line":1,"column":182},"end":{"line":1,"column":195}},"5":{"start":{"line":1,"column":209},"end":{"line":1,"column":219}},"6":{"start":{"line":1,"column":239},"end":{"line":1,"column":253}},"7":{"start":{"line":1,"column":254},"end":{"line":1,"column":261}},"8":{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},"9":{"start":{"line":1,"column":281},"end":{"line":1,"column":296}},"10":{"start":{"line":1,"column":306},"end":{"line":1,"column":424}},"11":{"start":{"line":1,"column":360},"end":{"line":1,"column":380}},"12":{"start":{"line":1,"column":401},"end":{"line":1,"column":420}},"13":{"start":{"line":1,"column":429},"end":{"line":1,"column":449}},"14":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"15":{"start":{"line":4,"column":24},"end":{"line":4,"column":52}},"16":{"start":{"line":5,"column":21},"end":{"line":5,"column":56}},"17":{"start":{"line":7,"column":0},"end":{"line":82,"column":3}},"18":{"start":{"line":10,"column":2},"end":{"line":25,"column":6}},"19":{"start":{"line":11,"column":16},"end":{"line":17,"column":5}},"20":{"start":{"line":18,"column":16},"end":{"line":20,"column":5}},"21":{"start":{"line":22,"column":4},"end":{"line":22,"column":44}},"22":{"start":{"line":23,"column":4},"end":{"line":23,"column":45}},"23":{"start":{"line":24,"column":4},"end":{"line":24,"column":50}},"24":{"start":{"line":27,"column":2},"end":{"line":41,"column":6}},"25":{"start":{"line":28,"column":16},"end":{"line":34,"column":5}},"26":{"start":{"line":35,"column":16},"end":{"line":37,"column":5}},"27":{"start":{"line":38,"column":4},"end":{"line":38,"column":44}},"28":{"start":{"line":39,"column":4},"end":{"line":39,"column":45}},"29":{"start":{"line":40,"column":4},"end":{"line":40,"column":50}},"30":{"start":{"line":43,"column":2},"end":{"line":60,"column":6}},"31":{"start":{"line":44,"column":16},"end":{"line":50,"column":5}},"32":{"start":{"line":51,"column":16},"end":{"line":53,"column":5}},"33":{"start":{"line":54,"column":4},"end":{"line":54,"column":73}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":44}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":63}},"36":{"start":{"line":57,"column":4},"end":{"line":57,"column":45}},"37":{"start":{"line":58,"column":4},"end":{"line":58,"column":50}},"38":{"start":{"line":59,"column":4},"end":{"line":59,"column":35}},"39":{"start":{"line":62,"column":2},"end":{"line":81,"column":6}},"40":{"start":{"line":63,"column":16},"end":{"line":69,"column":5}},"41":{"start":{"line":70,"column":16},"end":{"line":72,"column":5}},"42":{"start":{"line":73,"column":18},"end":{"line":75,"column":5}},"43":{"start":{"line":76,"column":4},"end":{"line":76,"column":73}},"44":{"start":{"line":77,"column":4},"end":{"line":77,"column":44}},"45":{"start":{"line":78,"column":4},"end":{"line":78,"column":63}},"46":{"start":{"line":79,"column":4},"end":{"line":79,"column":45}},"47":{"start":{"line":80,"column":4},"end":{"line":80,"column":50}}},"fnMap":{"0":{"name":"_asyncToGenerator","decl":{"start":{"line":1,"column":9},"end":{"line":1,"column":26}},"loc":{"start":{"line":1,"column":31},"end":{"line":1,"column":458}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":40},"end":{"line":1,"column":41}},"loc":{"start":{"line":1,"column":52},"end":{"line":1,"column":455}},"line":1},"2":{"name":"(anonymous_2)","decl":{"start":{"line":1,"column":110},"end":{"line":1,"column":111}},"loc":{"start":{"line":1,"column":137},"end":{"line":1,"column":451}},"line":1},"3":{"name":"step","decl":{"start":{"line":1,"column":148},"end":{"line":1,"column":152}},"loc":{"start":{"line":1,"column":163},"end":{"line":1,"column":428}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":341},"end":{"line":1,"column":342}},"loc":{"start":{"line":1,"column":358},"end":{"line":1,"column":382}},"line":1},"5":{"name":"(anonymous_5)","decl":{"start":{"line":1,"column":384},"end":{"line":1,"column":385}},"loc":{"start":{"line":1,"column":399},"end":{"line":1,"column":422}},"line":1},"6":{"name":"(anonymous_6)","decl":{"start":{"line":7,"column":28},"end":{"line":7,"column":29}},"loc":{"start":{"line":7,"column":34},"end":{"line":82,"column":1}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":10,"column":81},"end":{"line":10,"column":82}},"loc":{"start":{"line":10,"column":94},"end":{"line":25,"column":3}},"line":10},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":81},"end":{"line":27,"column":82}},"loc":{"start":{"line":27,"column":94},"end":{"line":41,"column":3}},"line":27},"9":{"name":"(anonymous_9)","decl":{"start":{"line":43,"column":86},"end":{"line":43,"column":87}},"loc":{"start":{"line":43,"column":99},"end":{"line":60,"column":3}},"line":43},"10":{"name":"(anonymous_10)","decl":{"start":{"line":62,"column":83},"end":{"line":62,"column":84}},"loc":{"start":{"line":62,"column":96},"end":{"line":81,"column":3}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},"type":"if","locations":[{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},{"start":{"line":1,"column":264},"end":{"line":1,"column":426}}],"line":1}},"s":{"0":4,"1":4,"2":4,"3":8,"4":8,"5":8,"6":0,"7":0,"8":8,"9":4,"10":4,"11":4,"12":0,"13":4,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1},"f":{"0":4,"1":4,"2":4,"3":8,"4":4,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{"0":[4,4]},"inputSourceMap":{"version":3,"sources":["cardsController.spec.js"],"names":["sinon","require","cardsController","cardsService","describe","cardsServiceStub","it","req","body","customerName","cardNumber","limit","res","status","stub","returns","end","spy","send","mock","addCard","assert","calledWith","calledOnce","calledWithExactly","restore","error","code","throws"],"mappings":"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","file":"cardsController.spec.js","sourceRoot":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/controllers","sourcesContent":["\nconst sinon = require('sinon');\nconst cardsController = require('./cardsController');\nconst cardsService = require('../services/cardsService');\n\ndescribe('cardsController', () => {\n  let cardsServiceStub;\n\n  it('should throw a bad request when customer name is empty', async () => {\n    const req = {\n      body: {\n        customerName: '',\n        cardNumber: '4809344282531711',\n        limit: 100\n      }\n    };\n    const res = {\n      status: sinon.stub().returns({ end: sinon.spy(), send: sinon.mock() })\n    };\n\n    await cardsController.addCard(req, res);\n    sinon.assert.calledWith(res.status, 400);\n    sinon.assert.calledOnce(res.status(400).send);\n  });\n\n  it('should throw a bad request when card number is invalid', async () => {\n    const req = {\n      body: {\n        customerName: 'John Doe',\n        cardNumber: '123456789012345',\n        limit: 100\n      }\n    };\n    const res = {\n      status: sinon.stub().returns({ end: sinon.spy(), send: sinon.mock() })\n    };\n    await cardsController.addCard(req, res);\n    sinon.assert.calledWith(res.status, 400);\n    sinon.assert.calledOnce(res.status(400).send);\n  });\n\n  it('should return a 201 response when all the details are valid', async () => {\n    const req = {\n      body: {\n        customerName: 'John Doe',\n        cardNumber: '4809344282531711',\n        limit: 100\n      }\n    };\n    const res = {\n      status: sinon.stub().returns({ end: sinon.spy(), send: sinon.mock() })\n    };\n    cardsServiceStub = sinon.stub(cardsService, 'addCard').returns(null);\n    await cardsController.addCard(req, res);\n    sinon.assert.calledWithExactly(cardsServiceStub, req.body);\n    sinon.assert.calledWith(res.status, 201);\n    sinon.assert.calledOnce(res.status(201).send);\n    cardsService.addCard.restore();\n  });\n\n  it('should return a 500 response when the cardsService fails', async () => {\n    const req = {\n      body: {\n        customerName: 'John Doe',\n        cardNumber: '4809344282531711',\n        limit: 100\n      }\n    };\n    const res = {\n      status: sinon.stub().returns({ end: sinon.spy(), send: sinon.mock() })\n    };\n    const error = {\n      code: 'P2002'\n    };\n    cardsServiceStub = sinon.stub(cardsService, 'addCard').throws(error);\n    await cardsController.addCard(req, res);\n    sinon.assert.calledWithExactly(cardsServiceStub, req.body);\n    sinon.assert.calledWith(res.status, 409);\n    sinon.assert.calledOnce(res.status(409).send);\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6bcf39d33c56f1609bde0b93ed7f3364d9483916","contentHash":"a493b5985c416e415d3bbf3b6d861f41666ac363bbf128b28719b453f40ef4b0"},"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/controllers/cardsController.js":{"path":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/controllers/cardsController.js","statementMap":{"0":{"start":{"line":1,"column":33},"end":{"line":1,"column":456}},"1":{"start":{"line":1,"column":64},"end":{"line":1,"column":89}},"2":{"start":{"line":1,"column":91},"end":{"line":1,"column":453}},"3":{"start":{"line":1,"column":165},"end":{"line":1,"column":263}},"4":{"start":{"line":1,"column":182},"end":{"line":1,"column":195}},"5":{"start":{"line":1,"column":209},"end":{"line":1,"column":219}},"6":{"start":{"line":1,"column":239},"end":{"line":1,"column":253}},"7":{"start":{"line":1,"column":254},"end":{"line":1,"column":261}},"8":{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},"9":{"start":{"line":1,"column":281},"end":{"line":1,"column":296}},"10":{"start":{"line":1,"column":306},"end":{"line":1,"column":424}},"11":{"start":{"line":1,"column":360},"end":{"line":1,"column":380}},"12":{"start":{"line":1,"column":401},"end":{"line":1,"column":420}},"13":{"start":{"line":1,"column":429},"end":{"line":1,"column":449}},"14":{"start":{"line":3,"column":31},"end":{"line":3,"column":64}},"15":{"start":{"line":4,"column":33},"end":{"line":4,"column":61}},"16":{"start":{"line":5,"column":21},"end":{"line":5,"column":56}},"17":{"start":{"line":7,"column":24},"end":{"line":57,"column":1}},"18":{"start":{"line":9,"column":15},"end":{"line":36,"column":6}},"19":{"start":{"line":10,"column":50},"end":{"line":10,"column":58}},"20":{"start":{"line":11,"column":6},"end":{"line":14,"column":7}},"21":{"start":{"line":12,"column":8},"end":{"line":12,"column":94}},"22":{"start":{"line":13,"column":8},"end":{"line":13,"column":57}},"23":{"start":{"line":16,"column":6},"end":{"line":19,"column":7}},"24":{"start":{"line":17,"column":8},"end":{"line":17,"column":64}},"25":{"start":{"line":18,"column":8},"end":{"line":18,"column":57}},"26":{"start":{"line":21,"column":6},"end":{"line":35,"column":7}},"27":{"start":{"line":22,"column":21},"end":{"line":22,"column":84}},"28":{"start":{"line":23,"column":8},"end":{"line":23,"column":53}},"29":{"start":{"line":25,"column":8},"end":{"line":25,"column":32}},"30":{"start":{"line":27,"column":8},"end":{"line":33,"column":9}},"31":{"start":{"line":28,"column":10},"end":{"line":28,"column":45}},"32":{"start":{"line":29,"column":10},"end":{"line":29,"column":38}},"33":{"start":{"line":31,"column":10},"end":{"line":31,"column":106}},"34":{"start":{"line":32,"column":10},"end":{"line":32,"column":35}},"35":{"start":{"line":34,"column":8},"end":{"line":34,"column":56}},"36":{"start":{"line":38,"column":4},"end":{"line":40,"column":6}},"37":{"start":{"line":39,"column":6},"end":{"line":39,"column":41}},"38":{"start":{"line":43,"column":16},"end":{"line":51,"column":6}},"39":{"start":{"line":44,"column":6},"end":{"line":50,"column":7}},"40":{"start":{"line":45,"column":25},"end":{"line":45,"column":57}},"41":{"start":{"line":46,"column":8},"end":{"line":46,"column":57}},"42":{"start":{"line":48,"column":8},"end":{"line":48,"column":102}},"43":{"start":{"line":49,"column":8},"end":{"line":49,"column":59}},"44":{"start":{"line":53,"column":4},"end":{"line":55,"column":6}},"45":{"start":{"line":54,"column":6},"end":{"line":54,"column":42}},"46":{"start":{"line":59,"column":0},"end":{"line":59,"column":33}}},"fnMap":{"0":{"name":"_asyncToGenerator","decl":{"start":{"line":1,"column":9},"end":{"line":1,"column":26}},"loc":{"start":{"line":1,"column":31},"end":{"line":1,"column":458}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":40},"end":{"line":1,"column":41}},"loc":{"start":{"line":1,"column":52},"end":{"line":1,"column":455}},"line":1},"2":{"name":"(anonymous_2)","decl":{"start":{"line":1,"column":110},"end":{"line":1,"column":111}},"loc":{"start":{"line":1,"column":137},"end":{"line":1,"column":451}},"line":1},"3":{"name":"step","decl":{"start":{"line":1,"column":148},"end":{"line":1,"column":152}},"loc":{"start":{"line":1,"column":163},"end":{"line":1,"column":428}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":341},"end":{"line":1,"column":342}},"loc":{"start":{"line":1,"column":358},"end":{"line":1,"column":382}},"line":1},"5":{"name":"(anonymous_5)","decl":{"start":{"line":1,"column":384},"end":{"line":1,"column":385}},"loc":{"start":{"line":1,"column":399},"end":{"line":1,"column":422}},"line":1},"6":{"name":"(anonymous_6)","decl":{"start":{"line":8,"column":12},"end":{"line":8,"column":13}},"loc":{"start":{"line":8,"column":18},"end":{"line":41,"column":3}},"line":8},"7":{"name":"(anonymous_7)","decl":{"start":{"line":9,"column":33},"end":{"line":9,"column":34}},"loc":{"start":{"line":9,"column":54},"end":{"line":36,"column":5}},"line":9},"8":{"name":"addCard","decl":{"start":{"line":38,"column":20},"end":{"line":38,"column":27}},"loc":{"start":{"line":38,"column":37},"end":{"line":40,"column":5}},"line":38},"9":{"name":"(anonymous_9)","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":17}},"loc":{"start":{"line":42,"column":22},"end":{"line":56,"column":3}},"line":42},"10":{"name":"(anonymous_10)","decl":{"start":{"line":43,"column":34},"end":{"line":43,"column":35}},"loc":{"start":{"line":43,"column":55},"end":{"line":51,"column":5}},"line":43},"11":{"name":"getAllCards","decl":{"start":{"line":53,"column":20},"end":{"line":53,"column":31}},"loc":{"start":{"line":53,"column":42},"end":{"line":55,"column":5}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},"type":"if","locations":[{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},{"start":{"line":1,"column":264},"end":{"line":1,"column":426}}],"line":1},"1":{"loc":{"start":{"line":11,"column":6},"end":{"line":14,"column":7}},"type":"if","locations":[{"start":{"line":11,"column":6},"end":{"line":14,"column":7}},{"start":{"line":11,"column":6},"end":{"line":14,"column":7}}],"line":11},"2":{"loc":{"start":{"line":11,"column":10},"end":{"line":11,"column":66}},"type":"binary-expr","locations":[{"start":{"line":11,"column":10},"end":{"line":11,"column":29}},{"start":{"line":11,"column":33},"end":{"line":11,"column":50}},{"start":{"line":11,"column":54},"end":{"line":11,"column":66}}],"line":11},"3":{"loc":{"start":{"line":16,"column":6},"end":{"line":19,"column":7}},"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":19,"column":7}},{"start":{"line":16,"column":6},"end":{"line":19,"column":7}}],"line":16},"4":{"loc":{"start":{"line":27,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":33,"column":9}},{"start":{"line":27,"column":8},"end":{"line":33,"column":9}}],"line":27}},"s":{"0":2,"1":4,"2":4,"3":5,"4":5,"5":5,"6":0,"7":0,"8":5,"9":4,"10":1,"11":1,"12":0,"13":4,"14":1,"15":1,"16":1,"17":1,"18":1,"19":4,"20":4,"21":1,"22":1,"23":3,"24":1,"25":1,"26":2,"27":2,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":1,"36":1,"37":4,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1},"f":{"0":2,"1":4,"2":4,"3":5,"4":1,"5":0,"6":1,"7":4,"8":4,"9":1,"10":0,"11":0},"b":{"0":[4,1],"1":[1,3],"2":[4,3,3],"3":[1,2],"4":[1,0]},"inputSourceMap":{"version":3,"sources":["cardsController.js"],"names":["empty","isValidCard","require","errorMessage","status","cardsService","cardsController","addCard","req","res","customerName","cardNumber","limit","body","error","bad","send","card","created","console","log","code","errStatus","message","conflict","getAllCards","allCards","success","module","exports"],"mappings":";;AAAA,MAAM,EAAEA,KAAF,EAASC,WAAT,KAAyBC,QAAQ,wBAAR,CAA/B;AACA,MAAM,EAAEC,YAAF,EAAgBC,MAAhB,KAA2BF,QAAQ,mBAAR,CAAjC;AACA,MAAMG,eAAeH,QAAQ,0BAAR,CAArB;;AAEA,MAAMI,kBAAkB;AACtBC;AAAA,iCAAS,WAAOC,GAAP,EAAYC,GAAZ,EAAoB;AAC3B,YAAM,EAAEC,YAAF,EAAgBC,UAAhB,EAA4BC,KAA5B,KAAsCJ,IAAIK,IAAhD;AACA,UAAIb,MAAMU,YAAN,KAAuBV,MAAMW,UAAN,CAAvB,IAA4CX,MAAMY,KAAN,CAAhD,EAA8D;AAC5DT,qBAAaW,KAAb,GAAqB,gEAArB;AACA,eAAOL,IAAIL,MAAJ,CAAWA,OAAOW,GAAlB,EAAuBC,IAAvB,CAA4Bb,YAA5B,CAAP;AACD;;AAED,UAAI,CAACF,YAAYU,UAAZ,CAAL,EAA8B;AAC5BR,qBAAaW,KAAb,GAAqB,kCAArB;AACA,eAAOL,IAAIL,MAAJ,CAAWA,OAAOW,GAAlB,EAAuBC,IAAvB,CAA4Bb,YAA5B,CAAP;AACD;;AAED,UAAI;AACF,cAAMc,OAAO,MAAMZ,aAAaE,OAAb,CAAqB,EAAEG,YAAF,EAAgBC,UAAhB,EAA4BC,KAA5B,EAArB,CAAnB;AACA,eAAOH,IAAIL,MAAJ,CAAWA,OAAOc,OAAlB,EAA2BF,IAA3B,CAAgCC,IAAhC,CAAP;AACD,OAHD,CAGE,OAAOH,KAAP,EAAc;AACdK,gBAAQC,GAAR,CAAYN,MAAMO,IAAlB;AACA,YAAIC,SAAJ;AACA,YAAIR,MAAMO,IAAN,KAAe,OAAnB,EAA4B;AAC1BlB,uBAAaW,KAAb,GAAqBA,MAAMS,OAA3B;AACAD,sBAAYlB,OAAOoB,QAAnB;AACD,SAHD,MAGO;AACLrB,uBAAaW,KAAb,GAAqB,0EAArB;AACAQ,sBAAYlB,OAAOU,KAAnB;AACD;AACD,eAAOL,IAAIL,MAAJ,CAAWkB,SAAX,EAAsBN,IAAtB,CAA2Bb,YAA3B,CAAP;AACD;AACF,KA3BD;;AAAA;AAAA;AAAA;AAAA,MADsB;AA6BtBsB;AAAA,kCAAa,WAAOjB,GAAP,EAAYC,GAAZ,EAAoB;AAC/B,UAAI;AACF,cAAMiB,WAAW,MAAMrB,aAAaoB,WAAb,EAAvB;AACA,eAAOhB,IAAIL,MAAJ,CAAWA,OAAOuB,OAAlB,EAA2BX,IAA3B,CAAgCU,QAAhC,CAAP;AACD,OAHD,CAGE,OAAOZ,KAAP,EAAc;AACdX,qBAAaW,KAAb,GAAqB,wEAArB;AACA,eAAOL,IAAIL,MAAJ,CAAWA,OAAOU,KAAlB,EAAyBE,IAAzB,CAA8Bb,YAA9B,CAAP;AACD;AACF,KARD;;AAAA;AAAA;AAAA;AAAA;AA7BsB,CAAxB;;AAwCAyB,OAAOC,OAAP,GAAiBvB,eAAjB","file":"cardsController.js","sourceRoot":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/controllers","sourcesContent":["const { empty, isValidCard } = require('../helpers/validations');\r\nconst { errorMessage, status } = require('../helpers/status');\r\nconst cardsService = require('../services/cardsService');\r\n\r\nconst cardsController = {\r\n  addCard: async (req, res) => {\r\n    const { customerName, cardNumber, limit } = req.body;\r\n    if (empty(customerName) || empty(cardNumber) || empty(limit)) {\r\n      errorMessage.error = 'Customer Name, Card Number & Card limit fields cannot be empty';\r\n      return res.status(status.bad).send(errorMessage);\r\n    }\r\n\r\n    if (!isValidCard(cardNumber)) {\r\n      errorMessage.error = 'Please Enter a Valid Card Number';\r\n      return res.status(status.bad).send(errorMessage);\r\n    }\r\n\r\n    try {\r\n      const card = await cardsService.addCard({ customerName, cardNumber, limit });\r\n      return res.status(status.created).send(card);\r\n    } catch (error) {\r\n      console.log(error.code);\r\n      let errStatus;\r\n      if (error.code === 'P2002') {\r\n        errorMessage.error = error.message;\r\n        errStatus = status.conflict;\r\n      } else {\r\n        errorMessage.error = 'Server Error: Something gone wrong while adding the new card into system';\r\n        errStatus = status.error;\r\n      }\r\n      return res.status(errStatus).send(errorMessage);\r\n    }\r\n  },\r\n  getAllCards: async (req, res) => {\r\n    try {\r\n      const allCards = await cardsService.getAllCards();\r\n      return res.status(status.success).send(allCards);\r\n    } catch (error) {\r\n      errorMessage.error = 'Server Error: Something gone wrong while fetching list of stored cards';\r\n      return res.status(status.error).send(errorMessage);\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = cardsController;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"52eecd9e583de1fc7ff91b3986b06309268ec011","contentHash":"f0f9f771c9e95ebbc10d9fd58d99f8e3847b027b5852e106085a63cdf9c4418e"},"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers/validations.js":{"path":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers/validations.js","statementMap":{"0":{"start":{"line":2,"column":14},"end":{"line":2,"column":58}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":58}},"2":{"start":{"line":4,"column":20},"end":{"line":16,"column":1}},"3":{"start":{"line":5,"column":12},"end":{"line":5,"column":13}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":30}},"6":{"start":{"line":9,"column":2},"end":{"line":14,"column":3}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":16}},"8":{"start":{"line":10,"column":16},"end":{"line":10,"column":41}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},"10":{"start":{"line":11,"column":26},"end":{"line":11,"column":37}},"11":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"12":{"start":{"line":12,"column":19},"end":{"line":12,"column":30}},"13":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}},"14":{"start":{"line":15,"column":2},"end":{"line":15,"column":24}},"15":{"start":{"line":18,"column":0},"end":{"line":21,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":14},"end":{"line":2,"column":15}},"loc":{"start":{"line":2,"column":23},"end":{"line":2,"column":58}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":20},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":29},"end":{"line":16,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":23},"end":{"line":2,"column":58}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":42}},{"start":{"line":2,"column":46},"end":{"line":2,"column":58}}],"line":2},"1":{"loc":{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},{"start":{"line":11,"column":4},"end":{"line":11,"column":37}}],"line":11},"2":{"loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},{"start":{"line":12,"column":4},"end":{"line":12,"column":30}}],"line":12}},"s":{"0":1,"1":13,"2":1,"3":6,"4":6,"5":6,"6":6,"7":6,"8":87,"9":87,"10":43,"11":87,"12":14,"13":87,"14":6,"15":1},"f":{"0":13,"1":6},"b":{"0":[13,12],"1":[43,44],"2":[14,73]},"inputSourceMap":{"version":3,"sources":["validations.js"],"names":["empty","input","undefined","isValidCard","sum","numdigits","length","parity","i","digit","parseInt","charAt","module","exports"],"mappings":";AACA,MAAMA,QAAQC,SAAUA,UAAUC,SAAV,IAAuBD,UAAU,EAAzD;;AAEA,MAAME,cAAcF,SAAS;AAC3B,MAAIG,MAAM,CAAV;AACA,QAAMC,YAAYJ,MAAMK,MAAxB;AACA,QAAMC,SAASF,YAAY,CAA3B;;AAEA,OAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIH,SAApB,EAA+BG,GAA/B,EAAoC;AAClC,QAAIC,QAAQC,SAAST,MAAMU,MAAN,CAAaH,CAAb,CAAT,CAAZ;AACA,QAAIA,IAAI,CAAJ,KAAUD,MAAd,EAAsBE,SAAS,CAAT;AACtB,QAAIA,QAAQ,CAAZ,EAAeA,SAAS,CAAT;AACfL,WAAOK,KAAP;AACD;AACD,SAAQL,MAAM,EAAP,KAAe,CAAtB;AACD,CAZD;;AAcAQ,OAAOC,OAAP,GAAiB;AACfb,OADe;AAEfG;AAFe,CAAjB","file":"validations.js","sourceRoot":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers","sourcesContent":["\r\nconst empty = input => (input === undefined || input === '');\r\n\r\nconst isValidCard = input => {\r\n  let sum = 0;\r\n  const numdigits = input.length;\r\n  const parity = numdigits % 2;\r\n\r\n  for (let i = 0; i < numdigits; i++) {\r\n    let digit = parseInt(input.charAt(i));\r\n    if (i % 2 === parity) digit *= 2;\r\n    if (digit > 9) digit -= 9;\r\n    sum += digit;\r\n  }\r\n  return (sum % 10) === 0;\r\n};\r\n\r\nmodule.exports = {\r\n  empty,\r\n  isValidCard\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6b6d1e86ead3095d6f43b463beae806d028d238c","contentHash":"72d7081aa1b1656eda4170638f8c1af5078eed815954064aa09582331265d0cb"},"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers/status.js":{"path":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers/status.js","statementMap":{"0":{"start":{"line":1,"column":23},"end":{"line":1,"column":44}},"1":{"start":{"line":2,"column":21},"end":{"line":2,"column":40}},"2":{"start":{"line":4,"column":15},"end":{"line":11,"column":1}},"3":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["status.js"],"names":["successMessage","status","errorMessage","success","error","notfound","conflict","created","bad","module","exports"],"mappings":"AAAA,MAAMA,iBAAiB,EAAEC,QAAQ,SAAV,EAAvB;AACA,MAAMC,eAAe,EAAED,QAAQ,OAAV,EAArB;;AAEA,MAAMA,SAAS;AACbE,WAAS,GADI;AAEbC,SAAO,GAFM;AAGbC,YAAU,GAHG;AAIbC,YAAU,GAJG;AAKbC,WAAS,GALI;AAMbC,OAAK;AANQ,CAAf;;AASAC,OAAOC,OAAP,GAAiB;AACfR,cADe,EACDF,cADC,EACeC;AADf,CAAjB","file":"status.js","sourceRoot":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers","sourcesContent":["const successMessage = { status: 'success' };\r\nconst errorMessage = { status: 'error' };\r\n\r\nconst status = {\r\n  success: 200,\r\n  error: 500,\r\n  notfound: 404,\r\n  conflict: 409,\r\n  created: 201,\r\n  bad: 400\r\n};\r\n\r\nmodule.exports = {\r\n  errorMessage, successMessage, status\r\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"75c917888be817a9c0b6c40dd5f2589f204d75ac","contentHash":"870be12297e46589c793cb208e085c6e2d6ad0411b23c33dddc259366b5d37af"},"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/services/cardsService.js":{"path":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/services/cardsService.js","statementMap":{"0":{"start":{"line":1,"column":33},"end":{"line":1,"column":456}},"1":{"start":{"line":1,"column":64},"end":{"line":1,"column":89}},"2":{"start":{"line":1,"column":91},"end":{"line":1,"column":453}},"3":{"start":{"line":1,"column":165},"end":{"line":1,"column":263}},"4":{"start":{"line":1,"column":182},"end":{"line":1,"column":195}},"5":{"start":{"line":1,"column":209},"end":{"line":1,"column":219}},"6":{"start":{"line":1,"column":239},"end":{"line":1,"column":253}},"7":{"start":{"line":1,"column":254},"end":{"line":1,"column":261}},"8":{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},"9":{"start":{"line":1,"column":281},"end":{"line":1,"column":296}},"10":{"start":{"line":1,"column":306},"end":{"line":1,"column":424}},"11":{"start":{"line":1,"column":360},"end":{"line":1,"column":380}},"12":{"start":{"line":1,"column":401},"end":{"line":1,"column":420}},"13":{"start":{"line":1,"column":429},"end":{"line":1,"column":449}},"14":{"start":{"line":3,"column":33},"end":{"line":3,"column":58}},"15":{"start":{"line":5,"column":15},"end":{"line":5,"column":33}},"16":{"start":{"line":7,"column":21},"end":{"line":54,"column":1}},"17":{"start":{"line":9,"column":15},"end":{"line":33,"column":6}},"18":{"start":{"line":10,"column":6},"end":{"line":32,"column":7}},"19":{"start":{"line":11,"column":21},"end":{"line":17,"column":10}},"20":{"start":{"line":18,"column":8},"end":{"line":18,"column":69}},"21":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},"22":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"23":{"start":{"line":22,"column":8},"end":{"line":30,"column":9}},"24":{"start":{"line":23,"column":10},"end":{"line":29,"column":11}},"25":{"start":{"line":24,"column":12},"end":{"line":24,"column":106}},"26":{"start":{"line":25,"column":12},"end":{"line":28,"column":15}},"27":{"start":{"line":31,"column":8},"end":{"line":31,"column":35}},"28":{"start":{"line":35,"column":4},"end":{"line":37,"column":6}},"29":{"start":{"line":36,"column":6},"end":{"line":36,"column":41}},"30":{"start":{"line":40,"column":16},"end":{"line":48,"column":6}},"31":{"start":{"line":41,"column":6},"end":{"line":47,"column":7}},"32":{"start":{"line":42,"column":25},"end":{"line":42,"column":53}},"33":{"start":{"line":43,"column":8},"end":{"line":43,"column":60}},"34":{"start":{"line":44,"column":8},"end":{"line":44,"column":24}},"35":{"start":{"line":46,"column":8},"end":{"line":46,"column":27}},"36":{"start":{"line":50,"column":4},"end":{"line":52,"column":6}},"37":{"start":{"line":51,"column":6},"end":{"line":51,"column":42}},"38":{"start":{"line":56,"column":0},"end":{"line":56,"column":30}}},"fnMap":{"0":{"name":"_asyncToGenerator","decl":{"start":{"line":1,"column":9},"end":{"line":1,"column":26}},"loc":{"start":{"line":1,"column":31},"end":{"line":1,"column":458}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":1,"column":40},"end":{"line":1,"column":41}},"loc":{"start":{"line":1,"column":52},"end":{"line":1,"column":455}},"line":1},"2":{"name":"(anonymous_2)","decl":{"start":{"line":1,"column":110},"end":{"line":1,"column":111}},"loc":{"start":{"line":1,"column":137},"end":{"line":1,"column":451}},"line":1},"3":{"name":"step","decl":{"start":{"line":1,"column":148},"end":{"line":1,"column":152}},"loc":{"start":{"line":1,"column":163},"end":{"line":1,"column":428}},"line":1},"4":{"name":"(anonymous_4)","decl":{"start":{"line":1,"column":341},"end":{"line":1,"column":342}},"loc":{"start":{"line":1,"column":358},"end":{"line":1,"column":382}},"line":1},"5":{"name":"(anonymous_5)","decl":{"start":{"line":1,"column":384},"end":{"line":1,"column":385}},"loc":{"start":{"line":1,"column":399},"end":{"line":1,"column":422}},"line":1},"6":{"name":"(anonymous_6)","decl":{"start":{"line":8,"column":12},"end":{"line":8,"column":13}},"loc":{"start":{"line":8,"column":18},"end":{"line":38,"column":3}},"line":8},"7":{"name":"(anonymous_7)","decl":{"start":{"line":9,"column":33},"end":{"line":9,"column":34}},"loc":{"start":{"line":9,"column":81},"end":{"line":33,"column":5}},"line":9},"8":{"name":"addCard","decl":{"start":{"line":35,"column":20},"end":{"line":35,"column":27}},"loc":{"start":{"line":35,"column":32},"end":{"line":37,"column":5}},"line":35},"9":{"name":"(anonymous_9)","decl":{"start":{"line":39,"column":16},"end":{"line":39,"column":17}},"loc":{"start":{"line":39,"column":22},"end":{"line":53,"column":3}},"line":39},"10":{"name":"(anonymous_10)","decl":{"start":{"line":40,"column":34},"end":{"line":40,"column":35}},"loc":{"start":{"line":40,"column":47},"end":{"line":48,"column":5}},"line":40},"11":{"name":"getAllCards","decl":{"start":{"line":50,"column":20},"end":{"line":50,"column":31}},"loc":{"start":{"line":50,"column":34},"end":{"line":52,"column":5}},"line":50}},"branchMap":{"0":{"loc":{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},"type":"if","locations":[{"start":{"line":1,"column":264},"end":{"line":1,"column":426}},{"start":{"line":1,"column":264},"end":{"line":1,"column":426}}],"line":1},"1":{"loc":{"start":{"line":22,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":30,"column":9}},{"start":{"line":22,"column":8},"end":{"line":30,"column":9}}],"line":22},"2":{"loc":{"start":{"line":23,"column":10},"end":{"line":29,"column":11}},"type":"if","locations":[{"start":{"line":23,"column":10},"end":{"line":29,"column":11}},{"start":{"line":23,"column":10},"end":{"line":29,"column":11}}],"line":23}},"s":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":1},"f":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"sources":["cardsService.js"],"names":["PrismaClient","Prisma","require","prisma","cardsService","addCard","customerName","cardNumber","limit","card","create","data","console","log","id","error","PrismaClientKnownRequestError","code","Error","message","$disconnect","getAllCards","allCards","findMany","module","exports"],"mappings":";;AAAA,MAAM,EAAEA,YAAF,EAAgBC,MAAhB,KAA2BC,QAAQ,gBAAR,CAAjC;;AAEA,MAAMC,SAAS,IAAIH,YAAJ,EAAf;;AAEA,MAAMI,eAAe;AACnBC;AAAA,iCAAS,WAAO,EAAEC,YAAF,EAAgBC,UAAhB,EAA4BC,KAA5B,EAAP,EAA+C;AACtD,UAAI;AACF,cAAMC,OAAO,MAAMN,OAAOM,IAAP,CAAYC,MAAZ,CAAmB;AACpCC,gBAAM;AACJL,wBADI;AAEJC,sBAFI;AAGJC;AAHI;AAD8B,SAAnB,CAAnB;AAOAI,gBAAQC,GAAR,CAAa,sCAAqCJ,KAAKK,EAAG,EAA1D;AACA,eAAOL,IAAP;AACD,OAVD,CAUE,OAAOM,KAAP,EAAc;AACdH,gBAAQC,GAAR,CAAYE,KAAZ;AACA,YAAIA,iBAAiBd,OAAOe,6BAA5B,EAA2D;AACzD,cAAID,MAAME,IAAN,KAAe,OAAnB,EAA4B;AAC1BL,oBAAQC,GAAR,CAAY,gFAAZ;AACA,kBAAM,IAAIK,KAAJ,CAAU;AACdD,oBAAM,OADQ;AAEdE,uBAAS;AAFK,aAAV,CAAN;AAID;AACF;AACD,cAAMhB,OAAOiB,WAAP,EAAN;AACD;AACF,KAxBD;;AAAA;AAAA;AAAA;AAAA,MADmB;AA0BnBC;AAAA,kCAAa,aAAY;AACvB,UAAI;AACF,cAAMC,WAAW,MAAMnB,OAAOM,IAAP,CAAYc,QAAZ,EAAvB;AACAX,gBAAQC,GAAR,CAAY,sCAAZ;AACA,eAAOS,QAAP;AACD,OAJD,CAIE,OAAOP,KAAP,EAAc;AACdH,gBAAQC,GAAR,CAAYE,KAAZ;AACD;AACF,KARD;;AAAA;AAAA;AAAA;AAAA;AA1BmB,CAArB;;AAqCAS,OAAOC,OAAP,GAAiBrB,YAAjB","file":"cardsService.js","sourceRoot":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/services","sourcesContent":["const { PrismaClient, Prisma } = require('@prisma/client');\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nconst cardsService = {\r\n  addCard: async ({ customerName, cardNumber, limit }) => {\r\n    try {\r\n      const card = await prisma.card.create({\r\n        data: {\r\n          customerName,\r\n          cardNumber,\r\n          limit\r\n        }\r\n      });\r\n      console.log(`New card has been created with id: ${card.id}`);\r\n      return card;\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\r\n        if (error.code === 'P2002') {\r\n          console.log('There is a unique constraint violation, Card number already exists in database');\r\n          throw new Error({\r\n            code: 'P2002',\r\n            message: 'Card number already exists, enter a valid card details'\r\n          });\r\n        }\r\n      }\r\n      await prisma.$disconnect();\r\n    }\r\n  },\r\n  getAllCards: async () => {\r\n    try {\r\n      const allCards = await prisma.card.findMany();\r\n      console.log('Fetch all cards operation successful');\r\n      return allCards;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = cardsService;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"990210ffeba649cddccfb469fc2798d07a7c4399","contentHash":"591e34d76c96691ef1d3afdfa3b34b201ea0e504d8b1ad13b6e50e42ab6da16c"},"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers/validations.spec.js":{"path":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers/validations.spec.js","statementMap":{"0":{"start":{"line":1,"column":19},"end":{"line":1,"column":34}},"1":{"start":{"line":2,"column":31},"end":{"line":2,"column":55}},"2":{"start":{"line":4,"column":0},"end":{"line":41,"column":3}},"3":{"start":{"line":5,"column":2},"end":{"line":10,"column":5}},"4":{"start":{"line":6,"column":34},"end":{"line":6,"column":52}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":58}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":11}},"7":{"start":{"line":12,"column":2},"end":{"line":16,"column":5}},"8":{"start":{"line":13,"column":30},"end":{"line":13,"column":48}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":55}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":11}},"11":{"start":{"line":18,"column":2},"end":{"line":22,"column":5}},"12":{"start":{"line":19,"column":30},"end":{"line":19,"column":40}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":55}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":11}},"15":{"start":{"line":24,"column":2},"end":{"line":28,"column":5}},"16":{"start":{"line":25,"column":23},"end":{"line":25,"column":25}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":41}},"18":{"start":{"line":27,"column":4},"end":{"line":27,"column":11}},"19":{"start":{"line":30,"column":2},"end":{"line":34,"column":5}},"20":{"start":{"line":31,"column":23},"end":{"line":31,"column":32}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":41}},"22":{"start":{"line":33,"column":4},"end":{"line":33,"column":11}},"23":{"start":{"line":36,"column":2},"end":{"line":40,"column":5}},"24":{"start":{"line":37,"column":23},"end":{"line":37,"column":35}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":42}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":11}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":33},"end":{"line":4,"column":34}},"loc":{"start":{"line":4,"column":39},"end":{"line":41,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":73},"end":{"line":5,"column":74}},"loc":{"start":{"line":5,"column":81},"end":{"line":10,"column":3}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":97},"end":{"line":12,"column":98}},"loc":{"start":{"line":12,"column":105},"end":{"line":16,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":76},"end":{"line":18,"column":77}},"loc":{"start":{"line":18,"column":84},"end":{"line":22,"column":3}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":60},"end":{"line":24,"column":61}},"loc":{"start":{"line":24,"column":68},"end":{"line":28,"column":3}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":64},"end":{"line":30,"column":65}},"loc":{"start":{"line":30,"column":72},"end":{"line":34,"column":3}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":36,"column":62},"end":{"line":36,"column":63}},"loc":{"start":{"line":36,"column":70},"end":{"line":40,"column":3}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"inputSourceMap":{"version":3,"sources":["validations.spec.js"],"names":["expect","require","isValidCard","empty","describe","it","done","validCreditCardNumber","to","be","true","invalidCardNumber","false","emptyValue","undefined"],"mappings":"AAAA,MAAM,EAAEA,MAAF,KAAaC,QAAQ,MAAR,CAAnB;AACA,MAAM,EAAEC,WAAF,EAAeC,KAAf,KAAyBF,QAAQ,eAAR,CAA/B;;AAEAG,SAAS,sBAAT,EAAiC,MAAM;AACrCC,KAAG,kEAAH,EAAwEC,IAAD,IAAU;AAC/E,UAAMC,wBAAwB,kBAA9B;;AAEAP,WAAOE,YAAYK,qBAAZ,CAAP,EAA2CC,EAA3C,CAA8CC,EAA9C,CAAiDC,IAAjD;AACAJ;AACD,GALD;;AAOAD,KAAG,0FAAH,EAAgGC,IAAD,IAAU;AACvG,UAAMK,oBAAoB,kBAA1B;AACAX,WAAOE,YAAYS,iBAAZ,CAAP,EAAuCH,EAAvC,CAA0CC,EAA1C,CAA6CG,KAA7C;AACAN;AACD,GAJD;;AAMAD,KAAG,qEAAH,EAA2EC,IAAD,IAAU;AAClF,UAAMK,oBAAoB,UAA1B;AACAX,WAAOE,YAAYS,iBAAZ,CAAP,EAAuCH,EAAvC,CAA0CC,EAA1C,CAA6CG,KAA7C;AACAN;AACD,GAJD;;AAMAD,KAAG,qDAAH,EAA2DC,IAAD,IAAU;AAClE,UAAMO,aAAa,EAAnB;AACAb,WAAOG,MAAMU,UAAN,CAAP,EAA0BL,EAA1B,CAA6BC,EAA7B,CAAgCC,IAAhC;AACAJ;AACD,GAJD;;AAMAD,KAAG,yDAAH,EAA+DC,IAAD,IAAU;AACtE,UAAMO,aAAaC,SAAnB;AACAd,WAAOG,MAAMU,UAAN,CAAP,EAA0BL,EAA1B,CAA6BC,EAA7B,CAAgCC,IAAhC;AACAJ;AACD,GAJD;;AAMAD,KAAG,uDAAH,EAA6DC,IAAD,IAAU;AACpE,UAAMO,aAAa,YAAnB;AACAb,WAAOG,MAAMU,UAAN,CAAP,EAA0BL,EAA1B,CAA6BC,EAA7B,CAAgCG,KAAhC;AACAN;AACD,GAJD;AAKD,CArCD","file":"validations.spec.js","sourceRoot":"/Users/aqibshaik/Documents/sapient/new_c/credit-card-services/backend/lib/helpers","sourcesContent":["const { expect } = require('chai');\r\nconst { isValidCard, empty } = require('./validations');\r\n\r\ndescribe('/helpers/validations', () => {\n  it('Should return true when passed valid credit card number as input', (done) => {\r\n    const validCreditCardNumber = '4809344282531711';\r\n\r\n    expect(isValidCard(validCreditCardNumber)).to.be.true;\r\n    done();\r\n  });\r\n\r\n  it('Should return false when passed Invalid credit card number with 16 digit length as input', (done) => {\r\n    const invalidCardNumber = '1234567890123456';\r\n    expect(isValidCard(invalidCardNumber)).to.be.false;\r\n    done();\r\n  });\r\n\r\n  it('Should return false when passed Invalid credit card number as input', (done) => {\r\n    const invalidCardNumber = '12345678';\r\n    expect(isValidCard(invalidCardNumber)).to.be.false;\r\n    done();\r\n  });\r\n\r\n  it('Should return true when passed Empty value as input', (done) => {\r\n    const emptyValue = '';\r\n    expect(empty(emptyValue)).to.be.true;\r\n    done();\r\n  });\r\n\r\n  it('Should return true when passed undefined value as input', (done) => {\r\n    const emptyValue = undefined;\r\n    expect(empty(emptyValue)).to.be.true;\r\n    done();\r\n  });\r\n\r\n  it('Should return false when passed truthy value as input', (done) => {\r\n    const emptyValue = 'Some input';\r\n    expect(empty(emptyValue)).to.be.false;\r\n    done();\r\n  });\r\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"67b8b92167115c6713fea807d31c6f3be53c6abc","contentHash":"5a08eb80859add33bf2d33765a284b06b292b374269dd6ac8e013a7263d7bb03"}}